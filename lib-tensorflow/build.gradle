apply plugin: "com.android.library"

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        ndk {
            // "x86", "x86_64", "armeabi", "armeabi-v7a", "arm64-v8a"
            abiFilters "armeabi", "armeabi-v7a"
        }
        externalNativeBuild {
            cmake {
                arguments "-DANDROID_PLATFORM=android-16",
                        "-DANDROID_TOOLCHAIN=clang",
                        "-DANDROID_STL=c++_shared",
                        "-DANDROID_CPP_FEATURES=rtti exceptions"
            }
        }
    }

    // Let gradle pack the shared library into apk.
    sourceSets {
        main {
            jniLibs.srcDirs = ["src/main/cppLibs/tensorflow/lib"]
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
        }
    }
    // Pick first STL shared library if there're duplicate files in the
    // dependent module.
    packagingOptions {
        pickFirst  "**/libc++_shared.so"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    compile fileTree(dir: "libs", include: ["*.jar", "*.so"])

    // My Library.
    compile project(":lib-core")

    // JSON.
    compile "com.google.code.gson:gson:2.7"
}
