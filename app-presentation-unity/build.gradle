apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
	compileSdkVersion rootProject.ext.compileSdkVersion
	buildToolsVersion rootProject.ext.buildToolsVersion

	defaultConfig {
		minSdkVersion rootProject.ext.minSdkVersion
		targetSdkVersion rootProject.ext.targetSdkVersion
		versionCode	1
		versionName	'1.0'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

		ndk {
			abiFilters 'armeabi-v7a'
		}
	}

	lintOptions {
		abortOnError false
	}

	aaptOptions {
		noCompress '.unity3d', '.ress', '.resource', '.obb'
	}

    packagingOptions {
        doNotStrip "*/armeabi-v7a/*.so"
    }

	buildTypes {
  		debug {
 			minifyEnabled false
 			useProguard false
 			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'
  			jniDebuggable true
  		}
  		release {
 			minifyEnabled false
 			useProguard false
  			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'
  			signingConfig signingConfigs.debug
  		}
	}
}

dependencies {
	api fileTree(dir: 'libs', include: ['*.jar'])

    // Google Support Library.
    api rootProject.ext.dep.supportAppcompatV7

    // Kotlin.
    api rootProject.ext.dep.kotlinStdlibJre7
    // RxKotlin.
    api rootProject.ext.dep.rxKotlin
    // Rx-Java.
    api rootProject.ext.dep.rxJava

	// Touch Gesture
	api rootProject.ext.dep.collageGestureDetector
	api rootProject.ext.dep.collageGestureDetectorRx

    // Unit tests.
    testImplementation rootProject.ext.dep.testJunit
    testImplementation rootProject.ext.dep.testMockito

    // Instrumentation tests.
    androidTestImplementation rootProject.ext.dep.testEspressoCore
}
